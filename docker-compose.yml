services:
  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: turbogate-redis
    restart: unless-stopped
    # Best Practice: Use .env file for secrets, not hardcoded values.
    # Create a .env file with: REDIS_PASSWORD=your_strong_password
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD?Variable not set}
    command: >
      redis-server
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    # Exposing Redis to the host is a security risk. Communicate over the Docker network instead.
    # ports:
    #   - "6379:6379"
    networks:
      - turbogate-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    security_opt:
      - no-privileges
    cap_drop:
      - ALL

  # TurboGate API Gateway
  turbogate:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    container_name: turbogate-gateway
    restart: unless-stopped
    # Best Practice: Use .env file for secrets, not hardcoded values.
    # Create a .env file with: SECRET_KEY=your_strong_secret and other variables.
    environment:
      - FLASK_ENV=prod
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - REDIS_URL=redis://:${REDIS_PASSWORD?Variable not set}@redis:6379/0
      - LOG_LEVEL=INFO
      - CORS_ORIGINS=${CORS_ORIGINS?Variable not set}
    # WARNING: Mounting the host directory is a security risk in production.
    # This is enabled for local development to allow for live code reloading.
    # For production, build a self-contained image without this volume mount.
    volumes:
      - .:/app
    ports:
      - "5000:5000"
    networks:
      - turbogate-network
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/gateway/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    user: "1001"
    security_opt:
      - no-privileges
    cap_drop:
      - ALL

networks:
  turbogate-network:
    driver: bridge