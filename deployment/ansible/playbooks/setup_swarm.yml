---
- name: Setup Docker Swarm Cluster
  hosts: all
  become: yes
  
  tasks:
    - name: Ensure /etc/apt/keyrings directory exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker GPG key to the correct keyring path
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644' # Recommended permission for keyring files

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - python3-pip
        state: present
        update_cache: yes
    
    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker # Ensures it creates /etc/apt/sources.list.d/docker.list
        update_cache: yes # Update cache after adding repo
    
    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: yes
    
    - name: Install Docker Python library
      pip:
        name:
          - docker
          - docker-compose
          - jsondiff
        state: present
    
    - name: Ensure Docker service is running
      systemd:
        name: docker
        state: started
        enabled: yes
    
    - name: Initialize Swarm on manager
      docker_swarm:
        state: present
        advertise_addr: "{{ ansible_default_ipv4.address }}"
      when: swarm_role == "manager"
      register: swarm_info
    
    - name: Get join token for workers
      set_fact:
        worker_token: "{{ swarm_info.swarm_facts.JoinTokens.Worker }}"
      when: swarm_role == "manager"
    
    - name: Join workers to swarm
      docker_swarm:
        state: join
        join_token: "{{ hostvars[groups['swarm_managers'][0]]['worker_token'] }}"
        remote_addrs: ["{{ hostvars[groups['swarm_managers'][0]]['ansible_default_ipv4']['address'] }}:2377"]
      when: 
        - swarm_role == "worker"
        - groups['swarm_workers'] | length > 0