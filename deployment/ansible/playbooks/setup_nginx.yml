---
- name: Prepare Host for NGINX Container and SSL
  hosts: swarm_managers
  become: yes
  
  vars:
    domain_name: "{{ domain_name }}"
    admin_email: "{{ admin_email }}"
  
  tasks:
    - name: Validate required variables
      ansible.builtin.assert:
        that:
          - domain_name is defined
          - admin_email is defined
        fail_msg: "Required variables (domain_name, admin_email) must be defined"

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install NGINX and Certbot
      ansible.builtin.apt:
        name:
          - nginx
          - certbot
          - python3-certbot-nginx
        state: present

    - name: Create webroot directory for certbot
      ansible.builtin.file:
        path: /var/www/certbot
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Create temporary NGINX configuration for certificate generation
      ansible.builtin.copy:
        content: |
          server {
              listen 80;
              listen [::]:80;
              server_name {{ domain_name }} www.{{ domain_name }};
              
              location /.well-known/acme-challenge/ {
                  root /var/www/certbot;
              }
              
              location / {
                  return 200 "Certificate generation in progress";
                  add_header Content-Type text/plain;
              }
          }
        dest: /etc/nginx/sites-available/temp-cert
        owner: root
        group: root
        mode: '0644'

    - name: Enable temporary site configuration
      ansible.builtin.file:
        src: /etc/nginx/sites-available/temp-cert
        dest: /etc/nginx/sites-enabled/temp-cert
        state: link

    - name: Remove default nginx site
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Test NGINX configuration
      ansible.builtin.command: nginx -t
      changed_when: false

    - name: Ensure NGINX is started for certificate validation
      ansible.builtin.systemd:
        name: nginx
        state: restarted
        enabled: yes
        daemon_reload: yes

    - name: Check if SSL certificate already exists
      ansible.builtin.stat:
        path: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
      register: ssl_cert

    - name: Generate Diffie-Hellman parameters if not exists
      ansible.builtin.command: openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
      args:
        creates: /etc/ssl/certs/dhparam.pem
      when: not ssl_cert.stat.exists

    - name: Obtain SSL certificate if it doesn't exist
      ansible.builtin.command: |
        certbot certonly --webroot -w /var/www/certbot \
        -d "{{ domain_name }}" -d "www.{{ domain_name }}" \
        -- staging \
        --non-interactive --agree-tos --email "{{ admin_email }}" \
        --preferred-challenges http
      when: not ssl_cert.stat.exists
      register: certbot_result

    - name: Verify SSL certificate was created
      ansible.builtin.stat:
        path: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
      register: ssl_cert_verify
      failed_when: not ssl_cert_verify.stat.exists

    - name: Setup automatic certificate renewal
      ansible.builtin.cron:
        name: "Certbot renewal"
        minute: "0"
        hour: "2"
        day: "*/15"
        job: "/usr/bin/certbot renew --quiet && docker service update --force turbogate_nginx"
        state: present

    - name: Stop and disable the host NGINX service
      ansible.builtin.systemd:
        name: nginx
        state: stopped
        enabled: no

    - name: Create NGINX directories for container config
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      loop:
        - /etc/nginx/sites-available
        - /var/log/turbogate/nginx

    - name: Copy final NGINX configuration for the container
      ansible.builtin.template:
        src: nginx.conf.j2 
        dest: /etc/nginx/sites-available/turbogate
        owner: root
        group: root
        mode: '0644'

    - name: Display configuration deployment status
      ansible.builtin.debug:
        msg: "NGINX configuration deployed to /etc/nginx/sites-available/turbogate"