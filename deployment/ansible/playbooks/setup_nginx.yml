---
- name: Setup NGINX Reverse Proxy with Let's Encrypt
  hosts: swarm_managers
  become: yes

  vars:
    domain_name: "ridebase.app"   # Replace with your GoDaddy domain
    admin_email: "faraiwande@gmail.com"  # Replace with your email
    app_port: 5000                 # Your backend service port

  tasks:
    - name: Install dependencies
      apt:
        name:
          - nginx
          - certbot
          - python3-certbot-nginx
        state: present
        update_cache: yes

    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'
      loop:
        - /var/www/certbot
        - /var/log/nginx
        - /etc/nginx/ssl

    - name: Deploy initial HTTP config
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/turbogate
        owner: root
        group: root
        mode: '0644'
      notify: reload nginx

    - name: Enable site
      file:
        src: /etc/nginx/sites-available/turbogate
        dest: /etc/nginx/sites-enabled/turbogate
        state: link

    - name: Remove default site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Test NGINX config
      command: nginx -t
      changed_when: false

    - name: Start and enable NGINX
      systemd:
        name: nginx
        state: started
        enabled: yes

    - name: Check for existing SSL certificate
      stat:
        path: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
      register: ssl_cert

    - name: Obtain SSL certificate (if needed)
      command: |
        certbot certonly --webroot \
        -w /var/www/certbot \
        -d {{ domain_name }} \
        -d www.{{ domain_name }} \
        --non-interactive \
        --agree-tos \
        --email {{ admin_email }}
      when: not ssl_cert.stat.exists

    - name: Setup certbot renewal
      cron:
        name: "Certbot SSL renewal"
        minute: "0"
        hour: "3"
        job: "/usr/bin/certbot renew --quiet --post-hook \"systemctl reload nginx\""

  handlers:
    - name: reload nginx
      systemd:
        name: nginx
        state: reloaded