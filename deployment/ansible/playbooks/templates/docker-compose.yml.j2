version: '3.8'

services:
  turbogate:
    image: {{ docker_registry | default('docker.io') }}/{{ image_name | default('fwande/turbogate') }}:{{ image_tag | default('latest') }}
    deploy:
      replicas: {{ app_replicas | default(2) }}
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
        monitor: 30s
        max_failure_ratio: 0.1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.labels.role == worker
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    environment:
      - FLASK_ENV=prod
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
      - DOMAIN_NAME={{ domain_name }}
      - VERSION={{ version | default('unknown') }}
    secrets:
      - source: turbogate_secret_key
        target: SECRET_KEY
        mode: 0400
      - source: redis_password
        target: redis_password
        mode: 0400
    networks:
      - turbogate_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/gateway/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    deploy:
      replicas: 1
      placement:
        constraints: 
          - node.labels.role == manager
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    # FIXED: Use sh -c to read the password file correctly
    command: sh -c 'redis-server --requirepass "$$(cat /run/secrets/redis_password)"'
    secrets:
      - source: redis_password
        target: redis_password
        mode: 0400
    networks:
      - turbogate_network
    volumes:
      - redis_data:/data
    healthcheck:
      # FIXED: Use sh -c for healthcheck to properly read the password
      test: ["CMD", "sh", "-c", "redis-cli --no-auth-warning -a \"$$(cat /run/secrets/redis_password)\" ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  nginx:
    image: nginx:alpine
    deploy:
      replicas: 1
      placement:
        constraints: 
          - node.labels.role == manager
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - /etc/nginx/sites-available/turbogate:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - nginx_logs:/var/log/nginx
    networks:
      - turbogate_network
    # Note: depends_on doesn't work in swarm mode, consider removing
    depends_on:
      - turbogate
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/turbogate/redis
  nginx_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/log/turbogate/nginx

networks:
  turbogate_network:
    external: true
    name: turbogate_network

secrets:
  turbogate_secret_key:
    external: true
  redis_password:
    external: true