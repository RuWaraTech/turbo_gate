# REPLACE: deployment/ansible/templates/docker-compose.yml.j2

version: '3.8'

services:
  turbogate:
    image: {{ docker_registry | default('docker.io') }}/{{ image_name | default('fwande/turbogate') }}:{{ image_tag | default('latest') }}
    deploy:
      replicas: {{ app_replicas | default(3) }}
      update_config:
        parallelism: 1
        delay: 30s
        order: start-first
        failure_action: rollback
        monitor: 60s
        max_failure_ratio: 0.1
      rollback_config:
        parallelism: 1
        delay: 10s
        order: stop-first
        monitor: 30s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          - node.labels.security_zone == internal
          - node.labels.security_hardened == true
        preferences:
          - spread: node.id
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    environment:
      - FLASK_ENV=prod
      - LOG_LEVEL=INFO
      - DOMAIN_NAME={{ domain_name }}
      - VERSION={{ version | default('unknown') }}
    secrets:
      - source: turbogate_secret_key
        target: SECRET_KEY
        mode: 0444
      - source: redis_password
        target: redis_password
        mode: 0444
    networks:
      - turbogate_frontend
      - turbogate_database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/gateway/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 45s
    depends_on:
      - redis
    # Security enhancements
    user: "1001:1001"  # Non-root user
    tmpfs:
      - /tmp:uid=1001,gid=1001,mode=1777
      - /var/tmp:uid=1001,gid=1001,mode=1777
      - /.cache/pypoetry:uid=1001,gid=1001
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE

  redis:
    image: redis:7-alpine
    deploy:
      replicas: 1
      placement:
        constraints: 
          - node.labels.role == manager
          - node.labels.security_hardened == true
        preferences:
          - spread: node.labels.security_zone
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    entrypoint: ["/bin/sh", "-c"]
    command: ["redis-server --requirepass \"$$(cat /run/secrets/redis_password)\" --maxmemory 200mb --maxmemory-policy allkeys-lru --save 900 1 --save 300 10"]
    secrets:
      - source: redis_password
        target: redis_password
        mode: 0444
    networks:
      - turbogate_database
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "sh", "-c", "redis-cli --no-auth-warning -a \"$$(cat /run/secrets/redis_password)\" ping | grep -q PONG"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 20s
    # Security enhancements
    user: "999:999"  # Redis user
    read_only: true
    tmpfs:
      - /tmp
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL

  nginx:
    image: nginx:alpine
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 15s
        order: start-first
        monitor: 30s
      placement:
        constraints: 
          - node.labels.role == manager
          - node.labels.security_zone == dmz
          - node.labels.security_hardened == true
        preferences:
          - spread: node.id
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: ingress
      - target: 443
        published: 443
        protocol: tcp
        mode: ingress
    configs:
      - source: nginx_config
        target: /etc/nginx/conf.d/default.conf
        mode: 0444
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot:ro
      - nginx_logs:/var/log/nginx
      - nginx_cache:/var/cache/nginx
    networks:
      - turbogate_frontend
    healthcheck:
      test: ["CMD-SHELL", "curl -k -f http://localhost/health || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 3
      start_period: 30s
    depends_on:
      - turbogate
    read_only: true
    tmpfs:
      - /tmp
      - /var/run
      - /run 
      - /run/nginx:uid=101,gid=101,mode=755 
      - /var/cache/nginx:uid=101,gid=101,mode=755
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
      - CHOWN
      - SETUID
      - SETGID

volumes:
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/turbogate/redis
  nginx_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/log/turbogate/nginx
  nginx_cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/cache/nginx

# Security-enhanced networks
networks:
  turbogate_frontend:
    external: true
    name: turbogate_frontend
  turbogate_backend:
    external: true  
    name: turbogate_backend
  turbogate_database:
    external: true
    name: turbogate_database

configs:
  nginx_config:
    external: true

secrets:
  turbogate_secret_key:
    external: true
  redis_password:
    external: true