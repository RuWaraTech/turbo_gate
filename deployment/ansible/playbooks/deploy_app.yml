---
- name: Deploy TurboGate Application
  hosts: swarm_managers # This means the stack will be deployed from the manager node
  become: yes
  
  vars:
    stack_name: turbogate
    compose_file: /opt/turbogate/docker-compose.yml
    # IMPORTANT: The 'secret_key', 'redis_password', 'docker_registry', 'image_tag',
    # 'domain_name', and 'app_replicas' variables MUST be passed to Ansible
    # via -e (extra-vars) during playbook execution, or defined in group_vars/host_vars.
    # Example (DO NOT hardcode sensitive values here in production):
    # secret_key: "your_flask_secret_key_here"
    # redis_password: "your_redis_password_here"
    # docker_registry: "docker.io"
    # image_tag: "0.7.19"
    # app_replicas: 2

  tasks:
    # Debug tasks to verify secret values (TEMPORARILY SHOWING VALUES FOR DEBUGGING. RE-ADD 'no_log: true' FOR PRODUCTION!)
    - name: Debug received secret_key (for troubleshooting)
      ansible.builtin.debug:
        var: secret_key # This will now show the actual value
      # no_log: true # Re-add for production
      # when: ansible_check_mode is not defined or not ansible_check_mode # Re-add for production

    - name: Debug received redis_password (for troubleshooting)
      ansible.builtin.debug:
        var: redis_password # This will now show the actual value
      # no_log: true # Re-add for production
      # when: ansible_check_mode is not defined or not ansible_check_mode # Re-add for production

    - name: Create application directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      loop:
        - /opt/turbogate

    # NEW: Stop the Docker stack to release secrets before updating them
    - name: Stop Docker stack to release secrets
      community.docker.docker_stack:
        name: "{{ stack_name }}"
        state: absent # This will stop and remove the services, releasing the secrets
      ignore_errors: true # Ignore if stack doesn't exist yet (first run)
      when: ansible_check_mode is not defined or not ansible_check_mode # Only run in normal mode

    - name: Debug secret item values before creation (for troubleshooting)
      ansible.builtin.debug:
        msg: "Secret Name: {{ item.name }}, Value: '{{ item.value }}', Base64 Encoded: '{{ item.value | b64encode }}'"
      loop:
        - { name: "turbogate_secret_key", value: "{{ secret_key }}" }
        - { name: "redis_password", value: "{{ redis_password }}" }
      # no_log: true # TEMPORARILY COMMENTED OUT FOR DEBUGGING. RE-ADD FOR PRODUCTION!

    - name: Create Docker secrets
      community.docker.docker_secret:
        name: "{{ item.name }}"
        data: "{{ item.value | b64encode }}"
        state: present
      loop:
        - { name: "turbogate_secret_key", value: "{{ secret_key }}" }
        - { name: "redis_password", value: "{{ redis_password }}" }
      when: item.value is defined and item.value | length > 0 # Only create secret if value is not empty
      # no_log: true # Prevents sensitive data from appearing in logs
    
    - name: Create Docker network
      community.docker.docker_network:
        name: turbogate_network # Changed from 'turbogate_net' for consistency with setup_swarm.yml
        driver: overlay
        attachable: yes
    
    - name: Create Docker Compose file for the entire stack
      ansible.builtin.copy:
        content: |
          version: '3.8'

          services:
            turbogate:
              image: {{ docker_registry | default('docker.io') }}/{{ image_name | default('fwande/turbogate') }}:{{ image_tag }}
              deploy:
                replicas: {{ app_replicas | default(2) }}
                update_config:
                  parallelism: 1
                  delay: 10s
                  order: start-first
                restart_policy:
                  condition: on-failure
                  delay: 5s
                  max_attempts: 3
                resources:
                  limits:
                    cpus: '0.5'
                    memory: 512M
                  reservations:
                    cpus: '0.25'
                    memory: 256M
              environment:
                - FLASK_ENV=prod
                - REDIS_URL=redis://redis:6379/0
                - LOG_LEVEL=INFO
                - DOMAIN_NAME={{ domain_name }}
              secrets:
                - source: turbogate_secret_key
                  target: SECRET_KEY
              networks:
                - turbogate_network # Changed from 'turbogate_net'
              healthcheck:
                test: ["CMD", "curl", "-f", "http://localhost:5000/gateway/health"]
                interval: 30s
                timeout: 3s
                retries: 3
                start_period: 40s
          
            redis:
              image: redis:7-alpine
              deploy:
                replicas: 1
                placement:
                  constraints: [node.role == manager] # Constrains Redis to run on manager node
              command: redis-server --requirepass_file /run/secrets/redis_password
              secrets:
                - redis_password
              networks:
                - turbogate_network # Changed from 'turbogate_net'
              volumes:
                - redis_data:/data # Persistent volume for Redis data
              healthcheck:
                test: ["CMD", "redis-cli", "ping"]
                interval: 10s
                timeout: 3s
                retries: 5

            nginx:
              image: nginx:alpine
              ports:
                - "80:80"
                - "443:443"
              deploy:
                replicas: 1
                placement:
                  constraints: [node.role == manager] # Constrains Nginx to run on manager node
              volumes:
                - /etc/nginx/sites-available/turbogate:/etc/nginx/conf.d/default.conf:ro
                - /etc/letsencrypt:/etc/letsencrypt:ro
                - nginx_logs:/var/log/nginx
              networks:
                - turbogate_network # Changed from 'turbogate_net'
              depends_on:
                - turbogate

          volumes:
            redis_data:
              driver: local
            nginx_logs:
              driver: local

          networks:
            turbogate_network: # Changed from 'turbogate_net'
              external: true # Indicates this network is created externally (by the 'Create Docker network' task)
          
          secrets:
            turbogate_secret_key:
              external: true # Indicates this secret is created externally (by the 'Create Docker secrets' task)
            redis_password:
              external: true # Indicates this secret is created externally
        dest: "{{ compose_file }}"
        owner: root
        group: root
        mode: '0644'
    
    - name: Deploy Docker stack
      community.docker.docker_stack:
        name: "{{ stack_name }}"
        compose:
          - "{{ compose_file }}"
        state: present
    
    - name: Wait for services to be ready (initial pause)
      ansible.builtin.pause:
        seconds: 30
    
    - name: Check service status
      ansible.builtin.command: docker service ls
      register: service_status
      changed_when: false
    
    - name: Display service status
      ansible.builtin.debug:
        var: service_status.stdout_lines
# 